{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","placeholder","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b207d52.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Budget App</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload //ne payload eshte id e transaction-it qe po dojm me fshi\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//Initial State\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: \"Car\", amount: -5000 },\r\n    { id: 2, text: \"Salary\", amount: 7000 },\r\n  ],\r\n};\r\n\r\n//create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      <h4>Balance</h4>\r\n      <h1>${total}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">${expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const type = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <div>\r\n      <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n        {transaction.text}\r\n        <span className=\"amount-nr\">\r\n          {type}${Math.abs(transaction.amount)}\r\n        </span>\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={() => deleteTransaction(transaction.id)}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text: text,\r\n      amount: +amount, //+amount e kthen ne numer prej string\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n    setText(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter text ...\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br /> (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter amount ...\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport Balance from \"./Balance\";\r\nimport IncomeExpenses from \"./IncomeExpenses\";\r\nimport TransactionList from \"./TransactionList\";\r\nimport AddTransaction from \"./AddTransaction\";\r\n\r\nimport { GlobalProvider } from \"../context/GlobalState\";\r\n\r\nimport \"../app.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <Balance />\r\n          <IncomeExpenses />\r\n          <TransactionList />\r\n          <AddTransaction />\r\n        </div>\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}